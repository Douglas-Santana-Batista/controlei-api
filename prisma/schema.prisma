// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

model Transaction {
  id          Int      @id @default(autoincrement())
  description String
  amount      Decimal
  type        String
  createdAt   DateTime @default(now())
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TipoPagamento {
  CREDITO
  DEBITO
  BOLETO
  PIX
}

model Usuarios {
  id_usuario    Int             @id @default(autoincrement())
  cpf           String?         @unique
  nome          String?
  senha         String?
  email         String?         @unique
  categorias    Categorias[]
  despesas      Despesas[]
  receitas      Receitas[]
  parcelas      Parcelas[]
  Subcategorias Subcategorias[]

  @@map("usuarios")
}

model Categorias {
  id_categoria        Int             @id @default(autoincrement())
  descricao_categoria String
  id_usuario          Int
  usuario             Usuarios        @relation(fields: [id_usuario], references: [id_usuario], onDelete: Cascade)
  despesas            Despesas[]
  receitas            Receitas[]
  Subcategorias       Subcategorias[]

  @@map("categorias")
}

model Subcategorias {
  id_subcategoria        Int        @id @default(autoincrement())
  descricao_subcategoria String
  id_categoria           Int
  id_usuario             Int
  categoria              Categorias @relation(fields: [id_categoria], references: [id_categoria], onDelete: Cascade)
  usuario                Usuarios   @relation(fields: [id_usuario], references: [id_usuario], onDelete: Cascade)
  despesas               Despesas[]
  receitas               Receitas[]

  @@map("subcategorias")
}

model Despesas {
  id_despesa                   Int            @id @default(autoincrement())
  data_da_despesa              DateTime       @default(dbgenerated("CURRENT_DATE"))
  descricao_despesa            String
  valor                        Float
  parcela                      Int?
  tipo_pagamento               TipoPagamento  @default(DEBITO)
  id_usuario                   Int
  id_categoria                 Int
  usuario                      Usuarios       @relation(fields: [id_usuario], references: [id_usuario], onDelete: Cascade)
  categoria                    Categorias     @relation(fields: [id_categoria], references: [id_categoria], onDelete: Cascade)
  parcelas                     Parcelas[]
  Subcategorias                Subcategorias? @relation(fields: [subcategoriasId_subcategoria], references: [id_subcategoria])
  subcategoriasId_subcategoria Int?

  @@map("despesas")
}

model Receitas {
  id_receita                   Int            @id @default(autoincrement())
  data_da_receita              DateTime       @default(dbgenerated("CURRENT_DATE"))
  descricao_receitas           String?
  valor                        Float
  id_usuario                   Int
  id_categoria                 Int
  usuario                      Usuarios       @relation(fields: [id_usuario], references: [id_usuario], onDelete: Cascade)
  categoria                    Categorias     @relation(fields: [id_categoria], references: [id_categoria], onDelete: Cascade)
  parcelas                     Parcelas[]
  Subcategorias                Subcategorias? @relation(fields: [subcategoriasId_subcategoria], references: [id_subcategoria])
  subcategoriasId_subcategoria Int?

  @@map("receitas")
}

model Parcelas {
  id_parcelas       Int       @id @default(autoincrement())
  data_da_parcela   DateTime  @default(dbgenerated("CURRENT_DATE"))
  numero_da_parcela Int
  id_usuario        Int
  id_receitas       Int
  id_despesas       Int
  usuario           Usuarios  @relation(fields: [id_usuario], references: [id_usuario], onDelete: Cascade)
  receita           Receitas? @relation(fields: [id_receitas], references: [id_receita])
  despesa           Despesas? @relation(fields: [id_despesas], references: [id_despesa])

  @@map("parcelas")
}
