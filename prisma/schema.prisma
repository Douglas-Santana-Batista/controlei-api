// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id_usuario     Int          @id @default(autoincrement())
  cpf            String?      @unique
  nome           String?    
  senha          String?      @unique
  email          String?      @unique
  categorias     Categoria[]
  despesas       Despesas[]
  receitas       Receitas[]
  parcelas       Parcelas[]

  @@map("usuario")
}

model Categoria {
  id_categoria          Int         @id @default(autoincrement())
  descricao_categoria   String    
  id_usuario            Int
  usuario               Usuario     @relation(fields: [id_usuario], references: [id_usuario])
  despesas              Despesas[]
  receitas              Receitas[]

  @@map("categoria")
}

model Despesas {
  id_despesa        Int         @id @default(autoincrement())
  data_da_despesa   DateTime?  
  descricao_despesa String    
  valor             Float    
  parcela           String?    
  id_usuario        Int
  id_categoria      Int
  usuario           Usuario     @relation(fields: [id_usuario], references: [id_usuario])
  categoria         Categoria   @relation(fields: [id_categoria], references: [id_categoria])
  parcelas          Parcelas[]

  @@map("despesas")
}

model Receitas {
  id_receita          Int         @id @default(autoincrement())
  data_da_receita     DateTime?  
  descricao_receitas  String?    
  valor               Float  
  id_usuario          Int
  id_categoria        Int
  usuario             Usuario     @relation(fields: [id_usuario], references: [id_usuario])
  categoria           Categoria   @relation(fields: [id_categoria], references: [id_categoria])
  parcelas            Parcelas[]

  @@map("receitas")
}

model Parcelas {
  id_parcelas       Int         @id @default(autoincrement())
  data_da_parcela   DateTime?  
  numero_da_parcela Int    
  id_usuario        Int
  id_receitas       Int
  id_despesas       Int
  usuario           Usuario     @relation(fields: [id_usuario], references: [id_usuario])
  receita           Receitas?    @relation(fields: [id_receitas], references: [id_receita])
  despesa           Despesas?    @relation(fields: [id_despesas], references: [id_despesa])

  @@map("parcelas")
}